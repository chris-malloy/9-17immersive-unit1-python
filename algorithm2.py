# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

sum_num = 0
a,b = 0,1
while b < 4000000:
	# print(b)
	a,b = b,a + b
	if ((b % 2) == 0):
		sum_num += b

print sum_num

#first two fib numbers for starters
fib_list = [1,2]
# init sum up front with our first know (2)
sum = 2
# loop. A long time
for i in range(2,4000000):
	# make a temp var called x, to stash the nedt number in
	x = fib_list[i-1] + fib_list[i - 2]
	# Insert the new number
	fib_list.insert(i,x)
	if (x > 4000000):
		#hooray!
		break
	if (x % 2 == 0):
		sum += x
print sum
































